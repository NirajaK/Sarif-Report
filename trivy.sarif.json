{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2022-30065",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox 1.35-x\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30065",
              "help": {
                "text": "Vulnerability CVE-2022-30065\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.35.0-r15\nLink: [CVE-2022-30065](https://avd.aquasec.com/nvd/cve-2022-30065)\nA use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "**Vulnerability CVE-2022-30065**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.35.0-r15|[CVE-2022-30065](https://avd.aquasec.com/nvd/cve-2022-30065)|\n\nA use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-42366",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: A heap-buffer-overflow"
              },
              "fullDescription": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42366",
              "help": {
                "text": "Vulnerability CVE-2023-42366\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.35.0-r18\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)\nA heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "**Vulnerability CVE-2023-42366**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.35.0-r18|[CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)|\n\nA heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-32221",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: POST following PUT confusion"
              },
              "fullDescription": {
                "text": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32221",
              "help": {
                "text": "Vulnerability CVE-2022-32221\nSeverity: CRITICAL\nPackage: libcurl\nFixed Version: 7.83.1-r4\nLink: [CVE-2022-32221](https://avd.aquasec.com/nvd/cve-2022-32221)\nWhen doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
                "markdown": "**Vulnerability CVE-2022-32221**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|libcurl|7.83.1-r4|[CVE-2022-32221](https://avd.aquasec.com/nvd/cve-2022-32221)|\n\nWhen doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-23914",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: HSTS ignored on multiple requests"
              },
              "fullDescription": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u0026lt;v7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-23914",
              "help": {
                "text": "Vulnerability CVE-2023-23914\nSeverity: CRITICAL\nPackage: libcurl\nFixed Version: 7.83.1-r6\nLink: [CVE-2023-23914](https://avd.aquasec.com/nvd/cve-2023-23914)\nA cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
                "markdown": "**Vulnerability CVE-2023-23914**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|libcurl|7.83.1-r6|[CVE-2023-23914](https://avd.aquasec.com/nvd/cve-2023-23914)|\n\nA cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-38545",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: heap based buffer overflow in the SOCKS5 proxy handshake"
              },
              "fullDescription": {
                "text": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \u0026#34;let the host resolve the name\u0026#34; could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-38545",
              "help": {
                "text": "Vulnerability CVE-2023-38545\nSeverity: CRITICAL\nPackage: libcurl\nFixed Version: 8.4.0-r0\nLink: [CVE-2023-38545](https://avd.aquasec.com/nvd/cve-2023-38545)\nThis flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.\n",
                "markdown": "**Vulnerability CVE-2023-38545**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|libcurl|8.4.0-r0|[CVE-2023-38545](https://avd.aquasec.com/nvd/cve-2023-38545)|\n\nThis flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-42915",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: HTTP proxy double-free"
              },
              "fullDescription": {
                "text": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-42915",
              "help": {
                "text": "Vulnerability CVE-2022-42915\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 7.83.1-r4\nLink: [CVE-2022-42915](https://avd.aquasec.com/nvd/cve-2022-42915)\ncurl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
                "markdown": "**Vulnerability CVE-2022-42915**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|7.83.1-r4|[CVE-2022-42915](https://avd.aquasec.com/nvd/cve-2022-42915)|\n\ncurl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-42916",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: HSTS bypass via IDN"
              },
              "fullDescription": {
                "text": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-42916",
              "help": {
                "text": "Vulnerability CVE-2022-42916\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 7.83.1-r4\nLink: [CVE-2022-42916](https://avd.aquasec.com/nvd/cve-2022-42916)\nIn curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
                "markdown": "**Vulnerability CVE-2022-42916**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|7.83.1-r4|[CVE-2022-42916](https://avd.aquasec.com/nvd/cve-2022-42916)|\n\nIn curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-43551",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: HSTS bypass via IDN"
              },
              "fullDescription": {
                "text": "A vulnerability exists in curl \u0026lt;7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-43551",
              "help": {
                "text": "Vulnerability CVE-2022-43551\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 7.83.1-r5\nLink: [CVE-2022-43551](https://avd.aquasec.com/nvd/cve-2022-43551)\nA vulnerability exists in curl \u003c7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
                "markdown": "**Vulnerability CVE-2022-43551**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|7.83.1-r5|[CVE-2022-43551](https://avd.aquasec.com/nvd/cve-2022-43551)|\n\nA vulnerability exists in curl \u003c7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-27533",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: TELNET option IAC injection"
              },
              "fullDescription": {
                "text": "A vulnerability in input validation exists in curl \u0026lt;8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \u0026#34;telnet options\u0026#34; during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application\u0026#39;s intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-27533",
              "help": {
                "text": "Vulnerability CVE-2023-27533\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27533](https://avd.aquasec.com/nvd/cve-2023-27533)\nA vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
                "markdown": "**Vulnerability CVE-2023-27533**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|8.0.1-r0|[CVE-2023-27533](https://avd.aquasec.com/nvd/cve-2023-27533)|\n\nA vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-27534",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: SFTP path ~ resolving discrepancy"
              },
              "fullDescription": {
                "text": "A path traversal vulnerability exists in curl \u0026lt;8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user\u0026#39;s home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-27534",
              "help": {
                "text": "Vulnerability CVE-2023-27534\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27534](https://avd.aquasec.com/nvd/cve-2023-27534)\nA path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
                "markdown": "**Vulnerability CVE-2023-27534**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|8.0.1-r0|[CVE-2023-27534](https://avd.aquasec.com/nvd/cve-2023-27534)|\n\nA path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-28319",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: use after free in SSH sha256 fingerprint check"
              },
              "fullDescription": {
                "text": "A use after free vulnerability exists in curl \u0026lt;v8.1.0 in the way libcurl offers a feature to verify an SSH server\u0026#39;s public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-28319",
              "help": {
                "text": "Vulnerability CVE-2023-28319\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28319](https://avd.aquasec.com/nvd/cve-2023-28319)\nA use after free vulnerability exists in curl \u003cv8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
                "markdown": "**Vulnerability CVE-2023-28319**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|8.1.0-r0|[CVE-2023-28319](https://avd.aquasec.com/nvd/cve-2023-28319)|\n\nA use after free vulnerability exists in curl \u003cv8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-38039",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: out of heap memory issue due to missing limit on header quantity"
              },
              "fullDescription": {
                "text": "When curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-38039",
              "help": {
                "text": "Vulnerability CVE-2023-38039\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 8.3.0-r0\nLink: [CVE-2023-38039](https://avd.aquasec.com/nvd/cve-2023-38039)\nWhen curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory.",
                "markdown": "**Vulnerability CVE-2023-38039**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|8.3.0-r0|[CVE-2023-38039](https://avd.aquasec.com/nvd/cve-2023-38039)|\n\nWhen curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-43552",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: Use-after-free triggered by an HTTP proxy deny response"
              },
              "fullDescription": {
                "text": "A use after free vulnerability exists in curl \u0026lt;7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-43552",
              "help": {
                "text": "Vulnerability CVE-2022-43552\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.83.1-r5\nLink: [CVE-2022-43552](https://avd.aquasec.com/nvd/cve-2022-43552)\nA use after free vulnerability exists in curl \u003c7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
                "markdown": "**Vulnerability CVE-2022-43552**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.83.1-r5|[CVE-2022-43552](https://avd.aquasec.com/nvd/cve-2022-43552)|\n\nA use after free vulnerability exists in curl \u003c7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-23915",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: HSTS amnesia with --parallel"
              },
              "fullDescription": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u0026lt;v7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-23915",
              "help": {
                "text": "Vulnerability CVE-2023-23915\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.83.1-r6\nLink: [CVE-2023-23915](https://avd.aquasec.com/nvd/cve-2023-23915)\nA cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
                "markdown": "**Vulnerability CVE-2023-23915**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.83.1-r6|[CVE-2023-23915](https://avd.aquasec.com/nvd/cve-2023-23915)|\n\nA cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-23916",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: HTTP multi-header compression denial of service"
              },
              "fullDescription": {
                "text": "An allocation of resources without limits or throttling vulnerability exists in curl \u0026lt;v7.88.0 based on the \u0026#34;chained\u0026#34; HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \u0026#34;links\u0026#34; in this \u0026#34;decompression chain\u0026#34; wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \u0026#34;malloc bomb\u0026#34;, making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-23916",
              "help": {
                "text": "Vulnerability CVE-2023-23916\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.83.1-r6\nLink: [CVE-2023-23916](https://avd.aquasec.com/nvd/cve-2023-23916)\nAn allocation of resources without limits or throttling vulnerability exists in curl \u003cv7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
                "markdown": "**Vulnerability CVE-2023-23916**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.83.1-r6|[CVE-2023-23916](https://avd.aquasec.com/nvd/cve-2023-23916)|\n\nAn allocation of resources without limits or throttling vulnerability exists in curl \u003cv7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-27535",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: FTP too eager connection reuse"
              },
              "fullDescription": {
                "text": "An authentication bypass vulnerability exists in libcurl \u0026lt;8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-27535",
              "help": {
                "text": "Vulnerability CVE-2023-27535\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27535](https://avd.aquasec.com/nvd/cve-2023-27535)\nAn authentication bypass vulnerability exists in libcurl \u003c8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
                "markdown": "**Vulnerability CVE-2023-27535**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|8.0.1-r0|[CVE-2023-27535](https://avd.aquasec.com/nvd/cve-2023-27535)|\n\nAn authentication bypass vulnerability exists in libcurl \u003c8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-27536",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: GSS delegation too eager connection re-use"
              },
              "fullDescription": {
                "text": "An authentication bypass vulnerability exists libcurl \u0026lt;8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-27536",
              "help": {
                "text": "Vulnerability CVE-2023-27536\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27536](https://avd.aquasec.com/nvd/cve-2023-27536)\nAn authentication bypass vulnerability exists libcurl \u003c8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
                "markdown": "**Vulnerability CVE-2023-27536**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|8.0.1-r0|[CVE-2023-27536](https://avd.aquasec.com/nvd/cve-2023-27536)|\n\nAn authentication bypass vulnerability exists libcurl \u003c8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-27537",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: HSTS double-free"
              },
              "fullDescription": {
                "text": "A double free vulnerability exists in libcurl \u0026lt;8.0.0 when sharing HSTS data between separate \u0026#34;handles\u0026#34;. This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-27537",
              "help": {
                "text": "Vulnerability CVE-2023-27537\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27537](https://avd.aquasec.com/nvd/cve-2023-27537)\nA double free vulnerability exists in libcurl \u003c8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
                "markdown": "**Vulnerability CVE-2023-27537**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|8.0.1-r0|[CVE-2023-27537](https://avd.aquasec.com/nvd/cve-2023-27537)|\n\nA double free vulnerability exists in libcurl \u003c8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-27538",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: SSH connection too eager reuse still"
              },
              "fullDescription": {
                "text": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-27538",
              "help": {
                "text": "Vulnerability CVE-2023-27538\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27538](https://avd.aquasec.com/nvd/cve-2023-27538)\nAn authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
                "markdown": "**Vulnerability CVE-2023-27538**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|8.0.1-r0|[CVE-2023-27538](https://avd.aquasec.com/nvd/cve-2023-27538)|\n\nAn authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-28320",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: siglongjmp race condition may lead to crash"
              },
              "fullDescription": {
                "text": "A denial of service vulnerability exists in curl \u0026lt;v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-28320",
              "help": {
                "text": "Vulnerability CVE-2023-28320\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28320](https://avd.aquasec.com/nvd/cve-2023-28320)\nA denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
                "markdown": "**Vulnerability CVE-2023-28320**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|8.1.0-r0|[CVE-2023-28320](https://avd.aquasec.com/nvd/cve-2023-28320)|\n\nA denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-28321",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: IDN wildcard match may lead to Improper Cerificate Validation"
              },
              "fullDescription": {
                "text": "An improper certificate validation vulnerability exists in curl \u0026lt;v8.1.0 in the way it supports matching of wildcard patterns when listed as \u0026#34;Subject Alternative Name\u0026#34; in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-28321",
              "help": {
                "text": "Vulnerability CVE-2023-28321\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28321](https://avd.aquasec.com/nvd/cve-2023-28321)\nAn improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
                "markdown": "**Vulnerability CVE-2023-28321**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|8.1.0-r0|[CVE-2023-28321](https://avd.aquasec.com/nvd/cve-2023-28321)|\n\nAn improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-46218",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: information disclosure by exploiting a mixed case flaw"
              },
              "fullDescription": {
                "text": "This flaw allows a malicious HTTP server to set \u0026#34;super cookies\u0026#34; in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl\u0026#39;s function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-46218",
              "help": {
                "text": "Vulnerability CVE-2023-46218\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 8.5.0-r0\nLink: [CVE-2023-46218](https://avd.aquasec.com/nvd/cve-2023-46218)\nThis flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.\n",
                "markdown": "**Vulnerability CVE-2023-46218**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|8.5.0-r0|[CVE-2023-46218](https://avd.aquasec.com/nvd/cve-2023-46218)|\n\nThis flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-46219",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: excessively long file name may lead to unknown HSTS status"
              },
              "fullDescription": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-46219",
              "help": {
                "text": "Vulnerability CVE-2023-46219\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 8.5.0-r0\nLink: [CVE-2023-46219](https://avd.aquasec.com/nvd/cve-2023-46219)\nWhen saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.\n",
                "markdown": "**Vulnerability CVE-2023-46219**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|8.5.0-r0|[CVE-2023-46219](https://avd.aquasec.com/nvd/cve-2023-46219)|\n\nWhen saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-35252",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: Incorrect handling of control code characters in cookies"
              },
              "fullDescription": {
                "text": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\u0026#34;sister site\u0026#34; to deny service to all siblings."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-35252",
              "help": {
                "text": "Vulnerability CVE-2022-35252\nSeverity: LOW\nPackage: libcurl\nFixed Version: 7.83.1-r3\nLink: [CVE-2022-35252](https://avd.aquasec.com/nvd/cve-2022-35252)\nWhen curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
                "markdown": "**Vulnerability CVE-2022-35252**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libcurl|7.83.1-r3|[CVE-2022-35252](https://avd.aquasec.com/nvd/cve-2022-35252)|\n\nWhen curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-28322",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: more POST-after-PUT confusion"
              },
              "fullDescription": {
                "text": "An information disclosure vulnerability exists in curl \u0026lt;v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-28322",
              "help": {
                "text": "Vulnerability CVE-2023-28322\nSeverity: LOW\nPackage: libcurl\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28322](https://avd.aquasec.com/nvd/cve-2023-28322)\nAn information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
                "markdown": "**Vulnerability CVE-2023-28322**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libcurl|8.1.0-r0|[CVE-2023-28322](https://avd.aquasec.com/nvd/cve-2023-28322)|\n\nAn information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-38546",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: cookie injection with none file"
              },
              "fullDescription": {
                "text": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \u0026#34;easy handles\u0026#34;\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-38546",
              "help": {
                "text": "Vulnerability CVE-2023-38546\nSeverity: LOW\nPackage: libcurl\nFixed Version: 8.4.0-r0\nLink: [CVE-2023-38546](https://avd.aquasec.com/nvd/cve-2023-38546)\nThis flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.\n",
                "markdown": "**Vulnerability CVE-2023-38546**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libcurl|8.4.0-r0|[CVE-2023-38546](https://avd.aquasec.com/nvd/cve-2023-38546)|\n\nThis flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-40674",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: a use-after-free in the doContent function in xmlparse.c"
              },
              "fullDescription": {
                "text": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-40674",
              "help": {
                "text": "Vulnerability CVE-2022-40674\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.4.9-r0\nLink: [CVE-2022-40674](https://avd.aquasec.com/nvd/cve-2022-40674)\nlibexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
                "markdown": "**Vulnerability CVE-2022-40674**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.4.9-r0|[CVE-2022-40674](https://avd.aquasec.com/nvd/cve-2022-40674)|\n\nlibexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-43680",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate"
              },
              "fullDescription": {
                "text": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-43680",
              "help": {
                "text": "Vulnerability CVE-2022-43680\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.5.0-r0\nLink: [CVE-2022-43680](https://avd.aquasec.com/nvd/cve-2022-43680)\nIn libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
                "markdown": "**Vulnerability CVE-2022-43680**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.5.0-r0|[CVE-2022-43680](https://avd.aquasec.com/nvd/cve-2022-43680)|\n\nIn libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-52425",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: parsing large tokens can trigger a denial of service"
              },
              "fullDescription": {
                "text": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-52425",
              "help": {
                "text": "Vulnerability CVE-2023-52425\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.6.0-r0\nLink: [CVE-2023-52425](https://avd.aquasec.com/nvd/cve-2023-52425)\nlibexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
                "markdown": "**Vulnerability CVE-2023-52425**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.6.0-r0|[CVE-2023-52425](https://avd.aquasec.com/nvd/cve-2023-52425)|\n\nlibexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-28757",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: XML Entity Expansion"
              },
              "fullDescription": {
                "text": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28757",
              "help": {
                "text": "Vulnerability CVE-2024-28757\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.6.2-r0\nLink: [CVE-2024-28757](https://avd.aquasec.com/nvd/cve-2024-28757)\nlibexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
                "markdown": "**Vulnerability CVE-2024-28757**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.6.2-r0|[CVE-2024-28757](https://avd.aquasec.com/nvd/cve-2024-28757)|\n\nlibexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-52426",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: recursive XML entity expansion vulnerability"
              },
              "fullDescription": {
                "text": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-52426",
              "help": {
                "text": "Vulnerability CVE-2023-52426\nSeverity: MEDIUM\nPackage: expat\nFixed Version: 2.6.0-r0\nLink: [CVE-2023-52426](https://avd.aquasec.com/nvd/cve-2023-52426)\nlibexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
                "markdown": "**Vulnerability CVE-2023-52426**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|expat|2.6.0-r0|[CVE-2023-52426](https://avd.aquasec.com/nvd/cve-2023-52426)|\n\nlibexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-42898",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "krb5: integer overflow vulnerabilities in PAC parsing"
              },
              "fullDescription": {
                "text": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \u0026#34;a similar bug.\u0026#34;"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-42898",
              "help": {
                "text": "Vulnerability CVE-2022-42898\nSeverity: HIGH\nPackage: krb5-libs\nFixed Version: 1.19.4-r0\nLink: [CVE-2022-42898](https://avd.aquasec.com/nvd/cve-2022-42898)\nPAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
                "markdown": "**Vulnerability CVE-2022-42898**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|krb5-libs|1.19.4-r0|[CVE-2022-42898](https://avd.aquasec.com/nvd/cve-2022-42898)|\n\nPAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\""
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-1304",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "e2fsprogs: out-of-bounds read/write via crafted filesystem"
              },
              "fullDescription": {
                "text": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1304",
              "help": {
                "text": "Vulnerability CVE-2022-1304\nSeverity: HIGH\nPackage: libcom_err\nFixed Version: 1.46.6-r0\nLink: [CVE-2022-1304](https://avd.aquasec.com/nvd/cve-2022-1304)\nAn out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
                "markdown": "**Vulnerability CVE-2022-1304**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcom_err|1.46.6-r0|[CVE-2022-1304](https://avd.aquasec.com/nvd/cve-2022-1304)|\n\nAn out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-4450",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: double free after calling PEM_read_bio_ex"
              },
              "fullDescription": {
                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \u0026#34;name\u0026#34; (e.g. \u0026#34;CERTIFICATE\u0026#34;), any header data and the payload data.\nIf the function succeeds then the \u0026#34;name_out\u0026#34;, \u0026#34;header\u0026#34; and \u0026#34;data\u0026#34; arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-4450",
              "help": {
                "text": "Vulnerability CVE-2022-4450\nSeverity: HIGH\nPackage: libssl1.1\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4450](https://avd.aquasec.com/nvd/cve-2022-4450)\nThe function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n",
                "markdown": "**Vulnerability CVE-2022-4450**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libssl1.1|1.1.1t-r0|[CVE-2022-4450](https://avd.aquasec.com/nvd/cve-2022-4450)|\n\nThe function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-0215",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: use-after-free following BIO_new_NDEF"
              },
              "fullDescription": {
                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0215",
              "help": {
                "text": "Vulnerability CVE-2023-0215\nSeverity: HIGH\nPackage: libssl1.1\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0215](https://avd.aquasec.com/nvd/cve-2023-0215)\nThe public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n",
                "markdown": "**Vulnerability CVE-2023-0215**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libssl1.1|1.1.1t-r0|[CVE-2023-0215](https://avd.aquasec.com/nvd/cve-2023-0215)|\n\nThe public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-0286",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: X.400 address type confusion in X.509 GeneralName"
              },
              "fullDescription": {
                "text": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0286",
              "help": {
                "text": "Vulnerability CVE-2023-0286\nSeverity: HIGH\nPackage: libssl1.1\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)\nThere is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.\n\n",
                "markdown": "**Vulnerability CVE-2023-0286**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libssl1.1|1.1.1t-r0|[CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)|\n\nThere is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-0464",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Denial of service by excessive resource usage in verifying X509 policy constraints"
              },
              "fullDescription": {
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy\u0026#39; argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()\u0026#39; function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0464",
              "help": {
                "text": "Vulnerability CVE-2023-0464\nSeverity: HIGH\nPackage: libssl1.1\nFixed Version: 1.1.1t-r1\nLink: [CVE-2023-0464](https://avd.aquasec.com/nvd/cve-2023-0464)\nA security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "**Vulnerability CVE-2023-0464**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libssl1.1|1.1.1t-r1|[CVE-2023-0464](https://avd.aquasec.com/nvd/cve-2023-0464)|\n\nA security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-2097",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: AES OCB fails to encrypt some bytes"
              },
              "fullDescription": {
                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn\u0026#39;t written. In the special case of \u0026#34;in place\u0026#34; encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2097",
              "help": {
                "text": "Vulnerability CVE-2022-2097\nSeverity: MEDIUM\nPackage: libssl1.1\nFixed Version: 1.1.1q-r0\nLink: [CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
                "markdown": "**Vulnerability CVE-2022-2097**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl1.1|1.1.1q-r0|[CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)|\n\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-4304",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: timing attack in RSA Decryption implementation"
              },
              "fullDescription": {
                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-4304",
              "help": {
                "text": "Vulnerability CVE-2022-4304\nSeverity: MEDIUM\nPackage: libssl1.1\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4304](https://avd.aquasec.com/nvd/cve-2022-4304)\nA timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.\n\n",
                "markdown": "**Vulnerability CVE-2022-4304**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl1.1|1.1.1t-r0|[CVE-2022-4304](https://avd.aquasec.com/nvd/cve-2022-4304)|\n\nA timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-0465",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Invalid certificate policies in leaf certificates are silently ignored"
              },
              "fullDescription": {
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy\u0026#39; argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()\u0026#39; function."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0465",
              "help": {
                "text": "Vulnerability CVE-2023-0465\nSeverity: MEDIUM\nPackage: libssl1.1\nFixed Version: 1.1.1t-r2\nLink: [CVE-2023-0465](https://avd.aquasec.com/nvd/cve-2023-0465)\nApplications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "**Vulnerability CVE-2023-0465**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl1.1|1.1.1t-r2|[CVE-2023-0465](https://avd.aquasec.com/nvd/cve-2023-0465)|\n\nApplications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-2650",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Possible DoS translating ASN.1 object identifiers"
              },
              "fullDescription": {
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with \u0026#39;n\u0026#39; being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer\u0026#39;s certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-2650",
              "help": {
                "text": "Vulnerability CVE-2023-2650\nSeverity: MEDIUM\nPackage: libssl1.1\nFixed Version: 1.1.1u-r0\nLink: [CVE-2023-2650](https://avd.aquasec.com/nvd/cve-2023-2650)\nIssue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
                "markdown": "**Vulnerability CVE-2023-2650**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl1.1|1.1.1u-r0|[CVE-2023-2650](https://avd.aquasec.com/nvd/cve-2023-2650)|\n\nIssue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-3446",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Excessive time spent checking DH keys and parameters"
              },
              "fullDescription": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus (\u0026#39;p\u0026#39; parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \u0026#39;-check\u0026#39; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-3446",
              "help": {
                "text": "Vulnerability CVE-2023-3446\nSeverity: MEDIUM\nPackage: libssl1.1\nFixed Version: 1.1.1u-r2\nLink: [CVE-2023-3446](https://avd.aquasec.com/nvd/cve-2023-3446)\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "**Vulnerability CVE-2023-3446**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl1.1|1.1.1u-r2|[CVE-2023-3446](https://avd.aquasec.com/nvd/cve-2023-3446)|\n\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-3817",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "OpenSSL: Excessive time spent checking DH q parameter value"
              },
              "fullDescription": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \u0026#34;-check\u0026#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-3817",
              "help": {
                "text": "Vulnerability CVE-2023-3817\nSeverity: MEDIUM\nPackage: libssl1.1\nFixed Version: 1.1.1v-r0\nLink: [CVE-2023-3817](https://avd.aquasec.com/nvd/cve-2023-3817)\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "**Vulnerability CVE-2023-3817**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl1.1|1.1.1v-r0|[CVE-2023-3817](https://avd.aquasec.com/nvd/cve-2023-3817)|\n\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-5678",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow"
              },
              "fullDescription": {
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn\u0026#39;t make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn\u0026#39;t check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\u0026#34;-pubcheck\u0026#34; option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-5678",
              "help": {
                "text": "Vulnerability CVE-2023-5678\nSeverity: MEDIUM\nPackage: libssl1.1\nFixed Version: 1.1.1w-r1\nLink: [CVE-2023-5678](https://avd.aquasec.com/nvd/cve-2023-5678)\nIssue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.\n\n",
                "markdown": "**Vulnerability CVE-2023-5678**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl1.1|1.1.1w-r1|[CVE-2023-5678](https://avd.aquasec.com/nvd/cve-2023-5678)|\n\nIssue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-46828",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libtirpc: DoS vulnerability with lots of connections"
              },
              "fullDescription": {
                "text": "In libtirpc before 1.3.3rc1, remote attackers could exhaust the file descriptors of a process that uses libtirpc because idle TCP connections are mishandled. This can, in turn, lead to an svc_run infinite loop without accepting new connections."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-46828",
              "help": {
                "text": "Vulnerability CVE-2021-46828\nSeverity: HIGH\nPackage: libtirpc-conf\nFixed Version: 1.3.2-r1\nLink: [CVE-2021-46828](https://avd.aquasec.com/nvd/cve-2021-46828)\nIn libtirpc before 1.3.3rc1, remote attackers could exhaust the file descriptors of a process that uses libtirpc because idle TCP connections are mishandled. This can, in turn, lead to an svc_run infinite loop without accepting new connections.",
                "markdown": "**Vulnerability CVE-2021-46828**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libtirpc-conf|1.3.2-r1|[CVE-2021-46828](https://avd.aquasec.com/nvd/cve-2021-46828)|\n\nIn libtirpc before 1.3.3rc1, remote attackers could exhaust the file descriptors of a process that uses libtirpc because idle TCP connections are mishandled. This can, in turn, lead to an svc_run infinite loop without accepting new connections."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-29491",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Local users can trigger security-relevant memory corruption via malformed data"
              },
              "fullDescription": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29491",
              "help": {
                "text": "Vulnerability CVE-2023-29491\nSeverity: HIGH\nPackage: ncurses-terminfo-base\nFixed Version: 6.3_p20220521-r1\nLink: [CVE-2023-29491](https://avd.aquasec.com/nvd/cve-2023-29491)\nncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "**Vulnerability CVE-2023-29491**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ncurses-terminfo-base|6.3_p20220521-r1|[CVE-2023-29491](https://avd.aquasec.com/nvd/cve-2023-29491)|\n\nncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-35945",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "envoy: HTTP/2 memory leak in nghttp2 codec"
              },
              "fullDescription": {
                "text": "Envoy is a cloud-native high-performance edge/middle/service proxy. Envoy’s HTTP/2 codec may leak a header map and bookkeeping structures upon receiving `RST_STREAM` immediately followed by the `GOAWAY` frames from an upstream server. In nghttp2, cleanup of pending requests due to receipt of the `GOAWAY` frame skips de-allocation of the bookkeeping structure and pending compressed header. The error return [code path] is taken if connection is already marked for not sending more requests due to `GOAWAY` frame. The clean-up code is right after the return statement, causing memory leak. Denial of service through memory exhaustion. This vulnerability was patched in versions(s) 1.26.3, 1.25.8, 1.24.9, 1.23.11."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-35945",
              "help": {
                "text": "Vulnerability CVE-2023-35945\nSeverity: HIGH\nPackage: nghttp2-libs\nFixed Version: 1.47.0-r1\nLink: [CVE-2023-35945](https://avd.aquasec.com/nvd/cve-2023-35945)\nEnvoy is a cloud-native high-performance edge/middle/service proxy. Envoy’s HTTP/2 codec may leak a header map and bookkeeping structures upon receiving `RST_STREAM` immediately followed by the `GOAWAY` frames from an upstream server. In nghttp2, cleanup of pending requests due to receipt of the `GOAWAY` frame skips de-allocation of the bookkeeping structure and pending compressed header. The error return [code path] is taken if connection is already marked for not sending more requests due to `GOAWAY` frame. The clean-up code is right after the return statement, causing memory leak. Denial of service through memory exhaustion. This vulnerability was patched in versions(s) 1.26.3, 1.25.8, 1.24.9, 1.23.11.",
                "markdown": "**Vulnerability CVE-2023-35945**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nghttp2-libs|1.47.0-r1|[CVE-2023-35945](https://avd.aquasec.com/nvd/cve-2023-35945)|\n\nEnvoy is a cloud-native high-performance edge/middle/service proxy. Envoy’s HTTP/2 codec may leak a header map and bookkeeping structures upon receiving `RST_STREAM` immediately followed by the `GOAWAY` frames from an upstream server. In nghttp2, cleanup of pending requests due to receipt of the `GOAWAY` frame skips de-allocation of the bookkeeping structure and pending compressed header. The error return [code path] is taken if connection is already marked for not sending more requests due to `GOAWAY` frame. The clean-up code is right after the return statement, causing memory leak. Denial of service through memory exhaustion. This vulnerability was patched in versions(s) 1.26.3, 1.25.8, 1.24.9, 1.23.11."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-44487",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "HTTP/2: Multiple HTTP/2 enabled web servers are vulnerable to a DDoS attack (Rapid Reset Attack)"
              },
              "fullDescription": {
                "text": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-44487",
              "help": {
                "text": "Vulnerability CVE-2023-44487\nSeverity: HIGH\nPackage: nghttp2-libs\nFixed Version: 1.47.0-r2\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)\nThe HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
                "markdown": "**Vulnerability CVE-2023-44487**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nghttp2-libs|1.47.0-r2|[CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)|\n\nThe HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-7104",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "sqlite: heap-buffer-overflow at sessionfuzz"
              },
              "fullDescription": {
                "text": "A vulnerability was found in SQLite SQLite3 up to 3.43.0 and classified as critical. This issue affects the function sessionReadRecord of the file ext/session/sqlite3session.c of the component make alltest Handler. The manipulation leads to heap-based buffer overflow. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-248999."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-7104",
              "help": {
                "text": "Vulnerability CVE-2023-7104\nSeverity: HIGH\nPackage: sqlite-libs\nFixed Version: 3.40.1-r1\nLink: [CVE-2023-7104](https://avd.aquasec.com/nvd/cve-2023-7104)\nA vulnerability was found in SQLite SQLite3 up to 3.43.0 and classified as critical. This issue affects the function sessionReadRecord of the file ext/session/sqlite3session.c of the component make alltest Handler. The manipulation leads to heap-based buffer overflow. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-248999.",
                "markdown": "**Vulnerability CVE-2023-7104**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|sqlite-libs|3.40.1-r1|[CVE-2023-7104](https://avd.aquasec.com/nvd/cve-2023-7104)|\n\nA vulnerability was found in SQLite SQLite3 up to 3.43.0 and classified as critical. This issue affects the function sessionReadRecord of the file ext/session/sqlite3session.c of the component make alltest Handler. The manipulation leads to heap-based buffer overflow. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-248999."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-37434",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "zlib: heap-based buffer over-read and overflow in inflate() in inflate.c via a large gzip header extra field"
              },
              "fullDescription": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-37434",
              "help": {
                "text": "Vulnerability CVE-2022-37434\nSeverity: CRITICAL\nPackage: zlib\nFixed Version: 1.2.12-r2\nLink: [CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "markdown": "**Vulnerability CVE-2022-37434**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|zlib|1.2.12-r2|[CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)|\n\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-30861",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "flask: Possible disclosure of permanent session cookie due to missing Vary: Cookie header"
              },
              "fullDescription": {
                "text": "Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client\u0026#39;s `session` cookie to other clients. The severity depends on the application\u0026#39;s use of the session and the proxy\u0026#39;s behavior regarding cookies. The risk depends on all these conditions being met.\n\n1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.\n2. The application sets `session.permanent = True`\n3. The application does not access or modify the session at any point during a request.\n4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).\n5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.\n\nThis happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-30861",
              "help": {
                "text": "Vulnerability CVE-2023-30861\nSeverity: HIGH\nPackage: Flask\nFixed Version: 2.3.2, 2.2.5\nLink: [CVE-2023-30861](https://avd.aquasec.com/nvd/cve-2023-30861)\nFlask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.\n\n1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.\n2. The application sets `session.permanent = True`\n3. The application does not access or modify the session at any point during a request.\n4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).\n5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.\n\nThis happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",
                "markdown": "**Vulnerability CVE-2023-30861**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Flask|2.3.2, 2.2.5|[CVE-2023-30861](https://avd.aquasec.com/nvd/cve-2023-30861)|\n\nFlask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.\n\n1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.\n2. The application sets `session.permanent = True`\n3. The application does not access or modify the session at any point during a request.\n4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).\n5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.\n\nThis happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-6221",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "A vulnerability in corydolphin/flask-cors version 4.0.1 allows the `Ac ..."
              },
              "fullDescription": {
                "text": "A vulnerability in corydolphin/flask-cors version 4.0.1 allows the `Access-Control-Allow-Private-Network` CORS header to be set to true by default, without any configuration option. This behavior can expose private network resources to unauthorized external access, leading to significant security risks such as data breaches, unauthorized access to sensitive information, and potential network intrusions."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-6221",
              "help": {
                "text": "Vulnerability CVE-2024-6221\nSeverity: HIGH\nPackage: Flask-Cors\nFixed Version: \nLink: [CVE-2024-6221](https://avd.aquasec.com/nvd/cve-2024-6221)\nA vulnerability in corydolphin/flask-cors version 4.0.1 allows the `Access-Control-Allow-Private-Network` CORS header to be set to true by default, without any configuration option. This behavior can expose private network resources to unauthorized external access, leading to significant security risks such as data breaches, unauthorized access to sensitive information, and potential network intrusions.",
                "markdown": "**Vulnerability CVE-2024-6221**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Flask-Cors||[CVE-2024-6221](https://avd.aquasec.com/nvd/cve-2024-6221)|\n\nA vulnerability in corydolphin/flask-cors version 4.0.1 allows the `Access-Control-Allow-Private-Network` CORS header to be set to true by default, without any configuration option. This behavior can expose private network resources to unauthorized external access, leading to significant security risks such as data breaches, unauthorized access to sensitive information, and potential network intrusions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-1681",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "corydolphin/flask-cors is vulnerable to log injection when the log lev ..."
              },
              "fullDescription": {
                "text": "corydolphin/flask-cors is vulnerable to log injection when the log level is set to debug. An attacker can inject fake log entries into the log file by sending a specially crafted GET request containing a CRLF sequence in the request path. This vulnerability allows attackers to corrupt log files, potentially covering tracks of other attacks, confusing log post-processing tools, and forging log entries. The issue is due to improper output neutralization for logs."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-1681",
              "help": {
                "text": "Vulnerability CVE-2024-1681\nSeverity: MEDIUM\nPackage: Flask-Cors\nFixed Version: 4.0.1\nLink: [CVE-2024-1681](https://avd.aquasec.com/nvd/cve-2024-1681)\ncorydolphin/flask-cors is vulnerable to log injection when the log level is set to debug. An attacker can inject fake log entries into the log file by sending a specially crafted GET request containing a CRLF sequence in the request path. This vulnerability allows attackers to corrupt log files, potentially covering tracks of other attacks, confusing log post-processing tools, and forging log entries. The issue is due to improper output neutralization for logs.",
                "markdown": "**Vulnerability CVE-2024-1681**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Flask-Cors|4.0.1|[CVE-2024-1681](https://avd.aquasec.com/nvd/cve-2024-1681)|\n\ncorydolphin/flask-cors is vulnerable to log injection when the log level is set to debug. An attacker can inject fake log entries into the log file by sending a specially crafted GET request containing a CRLF sequence in the request path. This vulnerability allows attackers to corrupt log files, potentially covering tracks of other attacks, confusing log post-processing tools, and forging log entries. The issue is due to improper output neutralization for logs."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-28493",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-jinja2: ReDoS vulnerability in the urlize filter"
              },
              "fullDescription": {
                "text": "This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-28493",
              "help": {
                "text": "Vulnerability CVE-2020-28493\nSeverity: MEDIUM\nPackage: Jinja2\nFixed Version: 2.11.3\nLink: [CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)\nThis affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",
                "markdown": "**Vulnerability CVE-2020-28493**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Jinja2|2.11.3|[CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)|\n\nThis affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-22195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jinja2: HTML attribute injection when passing user input as keys to xmlattr filter"
              },
              "fullDescription": {
                "text": "Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-22195",
              "help": {
                "text": "Vulnerability CVE-2024-22195\nSeverity: MEDIUM\nPackage: Jinja2\nFixed Version: 3.1.3\nLink: [CVE-2024-22195](https://avd.aquasec.com/nvd/cve-2024-22195)\nJinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.\n",
                "markdown": "**Vulnerability CVE-2024-22195**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Jinja2|3.1.3|[CVE-2024-22195](https://avd.aquasec.com/nvd/cve-2024-22195)|\n\nJinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-34064",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jinja2: accepts keys containing non-attribute characters"
              },
              "fullDescription": {
                "text": "Jinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u0026gt;`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-34064",
              "help": {
                "text": "Vulnerability CVE-2024-34064\nSeverity: MEDIUM\nPackage: Jinja2\nFixed Version: 3.1.4\nLink: [CVE-2024-34064](https://avd.aquasec.com/nvd/cve-2024-34064)\nJinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u003e`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4.",
                "markdown": "**Vulnerability CVE-2024-34064**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Jinja2|3.1.4|[CVE-2024-34064](https://avd.aquasec.com/nvd/cve-2024-34064)|\n\nJinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u003e`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-29217",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-jwt: Key confusion through non-blocklisted public key formats"
              },
              "fullDescription": {
                "text": "PyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-29217",
              "help": {
                "text": "Vulnerability CVE-2022-29217\nSeverity: HIGH\nPackage: PyJWT\nFixed Version: 2.4.0\nLink: [CVE-2022-29217](https://avd.aquasec.com/nvd/cve-2022-29217)\nPyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding.",
                "markdown": "**Vulnerability CVE-2022-29217**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|PyJWT|2.4.0|[CVE-2022-29217](https://avd.aquasec.com/nvd/cve-2022-29217)|\n\nPyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-25577",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-werkzeug: high resource usage when parsing multipart form data with many fields"
              },
              "fullDescription": {
                "text": "Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug\u0026#39;s multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-25577",
              "help": {
                "text": "Vulnerability CVE-2023-25577\nSeverity: HIGH\nPackage: Werkzeug\nFixed Version: 2.2.3\nLink: [CVE-2023-25577](https://avd.aquasec.com/nvd/cve-2023-25577)\nWerkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",
                "markdown": "**Vulnerability CVE-2023-25577**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Werkzeug|2.2.3|[CVE-2023-25577](https://avd.aquasec.com/nvd/cve-2023-25577)|\n\nWerkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-34069",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-werkzeug: user may execute code on a developer\u0026#39;s machine"
              },
              "fullDescription": {
                "text": "Werkzeug is a comprehensive WSGI web application library. The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer\u0026#39;s machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer\u0026#39;s application that will trigger the debugger. This vulnerability is fixed in 3.0.3."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-34069",
              "help": {
                "text": "Vulnerability CVE-2024-34069\nSeverity: HIGH\nPackage: Werkzeug\nFixed Version: 3.0.3\nLink: [CVE-2024-34069](https://avd.aquasec.com/nvd/cve-2024-34069)\nWerkzeug is a comprehensive WSGI web application library. The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer's machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer's application that will trigger the debugger. This vulnerability is fixed in 3.0.3.",
                "markdown": "**Vulnerability CVE-2024-34069**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Werkzeug|3.0.3|[CVE-2024-34069](https://avd.aquasec.com/nvd/cve-2024-34069)|\n\nWerkzeug is a comprehensive WSGI web application library. The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer's machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer's application that will trigger the debugger. This vulnerability is fixed in 3.0.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-46136",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-werkzeug: high resource consumption leading to denial of service"
              },
              "fullDescription": {
                "text": "Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-46136",
              "help": {
                "text": "Vulnerability CVE-2023-46136\nSeverity: MEDIUM\nPackage: Werkzeug\nFixed Version: 3.0.1, 2.3.8\nLink: [CVE-2023-46136](https://avd.aquasec.com/nvd/cve-2023-46136)\nWerkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.",
                "markdown": "**Vulnerability CVE-2023-46136**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Werkzeug|3.0.1, 2.3.8|[CVE-2023-46136](https://avd.aquasec.com/nvd/cve-2023-46136)|\n\nWerkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-23934",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-werkzeug: cookie prefixed with = can shadow unprefixed cookie"
              },
              "fullDescription": {
                "text": "Werkzeug is a comprehensive WSGI web application library. Browsers may allow \u0026#34;nameless\u0026#34; cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-23934",
              "help": {
                "text": "Vulnerability CVE-2023-23934\nSeverity: LOW\nPackage: Werkzeug\nFixed Version: 2.2.3\nLink: [CVE-2023-23934](https://avd.aquasec.com/nvd/cve-2023-23934)\nWerkzeug is a comprehensive WSGI web application library. Browsers may allow \"nameless\" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",
                "markdown": "**Vulnerability CVE-2023-23934**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|Werkzeug|2.2.3|[CVE-2023-23934](https://avd.aquasec.com/nvd/cve-2023-23934)|\n\nWerkzeug is a comprehensive WSGI web application library. Browsers may allow \"nameless\" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-37920",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-certifi: Removal of e-Tugra root certificate"
              },
              "fullDescription": {
                "text": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \u0026#34;e-Tugra\u0026#34; root certificates. e-Tugra\u0026#39;s root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \u0026#34;e-Tugra\u0026#34; from the root store."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-37920",
              "help": {
                "text": "Vulnerability CVE-2023-37920\nSeverity: HIGH\nPackage: certifi\nFixed Version: 2023.7.22\nLink: [CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \"e-Tugra\" root certificates. e-Tugra's root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store.",
                "markdown": "**Vulnerability CVE-2023-37920**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|certifi|2023.7.22|[CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)|\n\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \"e-Tugra\" root certificates. e-Tugra's root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23491",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-certifi: untrusted root certificates"
              },
              "fullDescription": {
                "text": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \u0026#34;TrustCor\u0026#34; from the root store. These are in the process of being removed from Mozilla\u0026#39;s trust store. TrustCor\u0026#39;s root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor\u0026#39;s ownership also operated a business that produced spyware. Conclusions of Mozilla\u0026#39;s investigation can be found in the linked google group discussion."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23491",
              "help": {
                "text": "Vulnerability CVE-2022-23491\nSeverity: MEDIUM\nPackage: certifi\nFixed Version: 2022.12.07\nLink: [CVE-2022-23491](https://avd.aquasec.com/nvd/cve-2022-23491)\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion.",
                "markdown": "**Vulnerability CVE-2022-23491**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|certifi|2022.12.07|[CVE-2022-23491](https://avd.aquasec.com/nvd/cve-2022-23491)|\n\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-41419",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-gevent: privilege escalation via a crafted script to the WSGIServer component"
              },
              "fullDescription": {
                "text": "An issue in Gevent before version 23.9.0 allows a remote attacker to escalate privileges via a crafted script to the WSGIServer component."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-41419",
              "help": {
                "text": "Vulnerability CVE-2023-41419\nSeverity: CRITICAL\nPackage: gevent\nFixed Version: 23.9.0\nLink: [CVE-2023-41419](https://avd.aquasec.com/nvd/cve-2023-41419)\nAn issue in Gevent before version 23.9.0 allows a remote attacker to escalate privileges via a crafted script to the WSGIServer component.",
                "markdown": "**Vulnerability CVE-2023-41419**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|gevent|23.9.0|[CVE-2023-41419](https://avd.aquasec.com/nvd/cve-2023-41419)|\n\nAn issue in Gevent before version 23.9.0 allows a remote attacker to escalate privileges via a crafted script to the WSGIServer component."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-3651",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-idna: potential DoS via resource consumption via specially crafted inputs to idna.encode()"
              },
              "fullDescription": {
                "text": "A vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function\u0026#39;s handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-3651",
              "help": {
                "text": "Vulnerability CVE-2024-3651\nSeverity: MEDIUM\nPackage: idna\nFixed Version: 3.7\nLink: [CVE-2024-3651](https://avd.aquasec.com/nvd/cve-2024-3651)\nA vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size.",
                "markdown": "**Vulnerability CVE-2024-3651**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|idna|3.7|[CVE-2024-3651](https://avd.aquasec.com/nvd/cve-2024-3651)|\n\nA vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-5752",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pip: Mercurial configuration injectable in repo revision when installing via pip"
              },
              "fullDescription": {
                "text": "When installing a package from a Mercurial VCS URL  (ie \u0026#34;pip install \nhg+...\u0026#34;) with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \u0026#34;hg clone\u0026#34; \ncall (ie \u0026#34;--config\u0026#34;). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren\u0026#39;t installing from Mercurial.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-5752",
              "help": {
                "text": "Vulnerability CVE-2023-5752\nSeverity: MEDIUM\nPackage: pip\nFixed Version: 23.3\nLink: [CVE-2023-5752](https://avd.aquasec.com/nvd/cve-2023-5752)\nWhen installing a package from a Mercurial VCS URL  (ie \"pip install \nhg+...\") with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \"hg clone\" \ncall (ie \"--config\"). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren't installing from Mercurial.\n",
                "markdown": "**Vulnerability CVE-2023-5752**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|pip|23.3|[CVE-2023-5752](https://avd.aquasec.com/nvd/cve-2023-5752)|\n\nWhen installing a package from a Mercurial VCS URL  (ie \"pip install \nhg+...\") with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \"hg clone\" \ncall (ie \"--config\"). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren't installing from Mercurial.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-42969",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The py library through 1.11.0 for Python allows remote attackers to co ..."
              },
              "fullDescription": {
                "text": "The py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled. Note: This has been disputed by multiple third parties as not being reproduceable and they argue this is not a valid vulnerability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-42969",
              "help": {
                "text": "Vulnerability CVE-2022-42969\nSeverity: HIGH\nPackage: py\nFixed Version: \nLink: [CVE-2022-42969](https://avd.aquasec.com/nvd/cve-2022-42969)\nThe py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled. Note: This has been disputed by multiple third parties as not being reproduceable and they argue this is not a valid vulnerability.",
                "markdown": "**Vulnerability CVE-2022-42969**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|py||[CVE-2022-42969](https://avd.aquasec.com/nvd/cve-2022-42969)|\n\nThe py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled. Note: This has been disputed by multiple third parties as not being reproduceable and they argue this is not a valid vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-32681",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-requests: Unintended leak of Proxy-Authorization header"
              },
              "fullDescription": {
                "text": "Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-32681",
              "help": {
                "text": "Vulnerability CVE-2023-32681\nSeverity: MEDIUM\nPackage: requests\nFixed Version: 2.31.0\nLink: [CVE-2023-32681](https://avd.aquasec.com/nvd/cve-2023-32681)\nRequests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n",
                "markdown": "**Vulnerability CVE-2023-32681**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|requests|2.31.0|[CVE-2023-32681](https://avd.aquasec.com/nvd/cve-2023-32681)|\n\nRequests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-35195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "requests: subsequent requests to the same host ignore cert verification"
              },
              "fullDescription": {
                "text": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-35195",
              "help": {
                "text": "Vulnerability CVE-2024-35195\nSeverity: MEDIUM\nPackage: requests\nFixed Version: 2.32.0\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)\nRequests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
                "markdown": "**Vulnerability CVE-2024-35195**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|requests|2.32.0|[CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)|\n\nRequests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-40897",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pypa-setuptools: Regular Expression Denial of Service (ReDoS) in package_index.py"
              },
              "fullDescription": {
                "text": "Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-40897",
              "help": {
                "text": "Vulnerability CVE-2022-40897\nSeverity: HIGH\nPackage: setuptools\nFixed Version: 65.5.1\nLink: [CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)\nPython Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.",
                "markdown": "**Vulnerability CVE-2022-40897**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|setuptools|65.5.1|[CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)|\n\nPython Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-6345",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pypa/setuptools: Remote code execution via download functions in the package_index module in pypa/setuptools"
              },
              "fullDescription": {
                "text": "A vulnerability in the package_index module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-6345",
              "help": {
                "text": "Vulnerability CVE-2024-6345\nSeverity: HIGH\nPackage: setuptools\nFixed Version: 70.0.0\nLink: [CVE-2024-6345](https://avd.aquasec.com/nvd/cve-2024-6345)\nA vulnerability in the package_index module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.",
                "markdown": "**Vulnerability CVE-2024-6345**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|setuptools|70.0.0|[CVE-2024-6345](https://avd.aquasec.com/nvd/cve-2024-6345)|\n\nA vulnerability in the package_index module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33503",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-urllib3: ReDoS in the parsing of authority part of URL"
              },
              "fullDescription": {
                "text": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33503",
              "help": {
                "text": "Vulnerability CVE-2021-33503\nSeverity: HIGH\nPackage: urllib3\nFixed Version: 1.26.5\nLink: [CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)\nAn issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.",
                "markdown": "**Vulnerability CVE-2021-33503**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|urllib3|1.26.5|[CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)|\n\nAn issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-28363",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-urllib3: HTTPS proxy host name not validated when using default SSLContext"
              },
              "fullDescription": {
                "text": "The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn\u0026#39;t given via proxy_config) doesn\u0026#39;t verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-28363",
              "help": {
                "text": "Vulnerability CVE-2021-28363\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 1.26.4\nLink: [CVE-2021-28363](https://avd.aquasec.com/nvd/cve-2021-28363)\nThe urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.",
                "markdown": "**Vulnerability CVE-2021-28363**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|1.26.4|[CVE-2021-28363](https://avd.aquasec.com/nvd/cve-2021-28363)|\n\nThe urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-43804",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-urllib3: Cookie request header isn\u0026#39;t stripped during cross-origin redirects"
              },
              "fullDescription": {
                "text": "urllib3 is a user-friendly HTTP client library for Python. urllib3 doesn\u0026#39;t treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn\u0026#39;t disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-43804",
              "help": {
                "text": "Vulnerability CVE-2023-43804\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 2.0.6, 1.26.17\nLink: [CVE-2023-43804](https://avd.aquasec.com/nvd/cve-2023-43804)\nurllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5.",
                "markdown": "**Vulnerability CVE-2023-43804**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|2.0.6, 1.26.17|[CVE-2023-43804](https://avd.aquasec.com/nvd/cve-2023-43804)|\n\nurllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45803",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "urllib3: Request body not stripped after redirect from 303 status changes request method to GET"
              },
              "fullDescription": {
                "text": "urllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn\u0026#39;t remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren\u0026#39;t putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn\u0026#39;t exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren\u0026#39;t expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45803",
              "help": {
                "text": "Vulnerability CVE-2023-45803\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 2.0.7, 1.26.18\nLink: [CVE-2023-45803](https://avd.aquasec.com/nvd/cve-2023-45803)\nurllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.\n",
                "markdown": "**Vulnerability CVE-2023-45803**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|2.0.7, 1.26.18|[CVE-2023-45803](https://avd.aquasec.com/nvd/cve-2023-45803)|\n\nurllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-37891",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "urllib3: proxy-authorization request header is not stripped during cross-origin redirects"
              },
              "fullDescription": {
                "text": " urllib3 is a user-friendly HTTP client library for Python. When using urllib3\u0026#39;s proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3\u0026#39;s proxy support, it\u0026#39;s possible to accidentally configure the `Proxy-Authorization` header even though it won\u0026#39;t have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn\u0026#39;t treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn\u0026#39;t strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3\u0026#39;s proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren\u0026#39;t using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3\u0026#39;s built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3\u0026#39;s `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-37891",
              "help": {
                "text": "Vulnerability CVE-2024-37891\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 1.26.19, 2.2.2\nLink: [CVE-2024-37891](https://avd.aquasec.com/nvd/cve-2024-37891)\n urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
                "markdown": "**Vulnerability CVE-2024-37891**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|1.26.19, 2.2.2|[CVE-2024-37891](https://avd.aquasec.com/nvd/cve-2024-37891)|\n\n urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-40898",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-wheel: remote attackers can cause denial of service via attacker controlled input to wheel cli"
              },
              "fullDescription": {
                "text": "An issue discovered in Python Packaging Authority (PyPA) Wheel 0.37.1 and earlier allows remote attackers to cause a denial of service via attacker controlled input to wheel cli."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-40898",
              "help": {
                "text": "Vulnerability CVE-2022-40898\nSeverity: HIGH\nPackage: wheel\nFixed Version: 0.38.1\nLink: [CVE-2022-40898](https://avd.aquasec.com/nvd/cve-2022-40898)\nAn issue discovered in Python Packaging Authority (PyPA) Wheel 0.37.1 and earlier allows remote attackers to cause a denial of service via attacker controlled input to wheel cli.",
                "markdown": "**Vulnerability CVE-2022-40898**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|wheel|0.38.1|[CVE-2022-40898](https://avd.aquasec.com/nvd/cve-2022-40898)|\n\nAn issue discovered in Python Packaging Authority (PyPA) Wheel 0.37.1 and earlier allows remote attackers to cause a denial of service via attacker controlled input to wheel cli."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-5569",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "github.com/jaraco/zipp: Denial of Service (infinite loop) via crafted zip file in jaraco/zipp"
              },
              "fullDescription": {
                "text": "A Denial of Service (DoS) vulnerability exists in the jaraco/zipp library, affecting all versions prior to 3.19.1. The vulnerability is triggered when processing a specially crafted zip file that leads to an infinite loop. This issue also impacts the zipfile module of CPython, as features from the third-party zipp library are later merged into CPython, and the affected code is identical in both projects. The infinite loop can be initiated through the use of functions affecting the `Path` module in both zipp and zipfile, such as `joinpath`, the overloaded division operator, and `iterdir`. Although the infinite loop is not resource exhaustive, it prevents the application from responding. The vulnerability was addressed in version 3.19.1 of jaraco/zipp."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-5569",
              "help": {
                "text": "Vulnerability CVE-2024-5569\nSeverity: MEDIUM\nPackage: zipp\nFixed Version: 3.19.1\nLink: [CVE-2024-5569](https://avd.aquasec.com/nvd/cve-2024-5569)\nA Denial of Service (DoS) vulnerability exists in the jaraco/zipp library, affecting all versions prior to 3.19.1. The vulnerability is triggered when processing a specially crafted zip file that leads to an infinite loop. This issue also impacts the zipfile module of CPython, as features from the third-party zipp library are later merged into CPython, and the affected code is identical in both projects. The infinite loop can be initiated through the use of functions affecting the `Path` module in both zipp and zipfile, such as `joinpath`, the overloaded division operator, and `iterdir`. Although the infinite loop is not resource exhaustive, it prevents the application from responding. The vulnerability was addressed in version 3.19.1 of jaraco/zipp.",
                "markdown": "**Vulnerability CVE-2024-5569**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|zipp|3.19.1|[CVE-2024-5569](https://avd.aquasec.com/nvd/cve-2024-5569)|\n\nA Denial of Service (DoS) vulnerability exists in the jaraco/zipp library, affecting all versions prior to 3.19.1. The vulnerability is triggered when processing a specially crafted zip file that leads to an infinite loop. This issue also impacts the zipfile module of CPython, as features from the third-party zipp library are later merged into CPython, and the affected code is identical in both projects. The infinite loop can be initiated through the use of functions affecting the `Path` module in both zipp and zipfile, such as `joinpath`, the overloaded division operator, and `iterdir`. Although the infinite loop is not resource exhaustive, it prevents the application from responding. The vulnerability was addressed in version 3.19.1 of jaraco/zipp."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            }
          ],
          "version": "dev"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2022-30065",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.35.0-r13\nVulnerability CVE-2022-30065\nSeverity: HIGH\nFixed Version: 1.35.0-r15\nLink: [CVE-2022-30065](https://avd.aquasec.com/nvd/cve-2022-30065)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: busybox@1.35.0-r13"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.35.0-r13\nVulnerability CVE-2023-42366\nSeverity: MEDIUM\nFixed Version: 1.35.0-r18\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: busybox@1.35.0-r13"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32221",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-32221\nSeverity: CRITICAL\nFixed Version: 7.83.1-r4\nLink: [CVE-2022-32221](https://avd.aquasec.com/nvd/cve-2022-32221)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23914",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-23914\nSeverity: CRITICAL\nFixed Version: 7.83.1-r6\nLink: [CVE-2023-23914](https://avd.aquasec.com/nvd/cve-2023-23914)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38545",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-38545\nSeverity: CRITICAL\nFixed Version: 8.4.0-r0\nLink: [CVE-2023-38545](https://avd.aquasec.com/nvd/cve-2023-38545)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42915",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-42915\nSeverity: HIGH\nFixed Version: 7.83.1-r4\nLink: [CVE-2022-42915](https://avd.aquasec.com/nvd/cve-2022-42915)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42916",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-42916\nSeverity: HIGH\nFixed Version: 7.83.1-r4\nLink: [CVE-2022-42916](https://avd.aquasec.com/nvd/cve-2022-42916)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43551",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-43551\nSeverity: HIGH\nFixed Version: 7.83.1-r5\nLink: [CVE-2022-43551](https://avd.aquasec.com/nvd/cve-2022-43551)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27533",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27533\nSeverity: HIGH\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27533](https://avd.aquasec.com/nvd/cve-2023-27533)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27534",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27534\nSeverity: HIGH\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27534](https://avd.aquasec.com/nvd/cve-2023-27534)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28319",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-28319\nSeverity: HIGH\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28319](https://avd.aquasec.com/nvd/cve-2023-28319)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38039",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-38039\nSeverity: HIGH\nFixed Version: 8.3.0-r0\nLink: [CVE-2023-38039](https://avd.aquasec.com/nvd/cve-2023-38039)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43552",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-43552\nSeverity: MEDIUM\nFixed Version: 7.83.1-r5\nLink: [CVE-2022-43552](https://avd.aquasec.com/nvd/cve-2022-43552)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23915",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-23915\nSeverity: MEDIUM\nFixed Version: 7.83.1-r6\nLink: [CVE-2023-23915](https://avd.aquasec.com/nvd/cve-2023-23915)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23916",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-23916\nSeverity: MEDIUM\nFixed Version: 7.83.1-r6\nLink: [CVE-2023-23916](https://avd.aquasec.com/nvd/cve-2023-23916)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27535",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27535\nSeverity: MEDIUM\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27535](https://avd.aquasec.com/nvd/cve-2023-27535)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27536",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27536\nSeverity: MEDIUM\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27536](https://avd.aquasec.com/nvd/cve-2023-27536)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27537",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27537\nSeverity: MEDIUM\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27537](https://avd.aquasec.com/nvd/cve-2023-27537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27538",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27538\nSeverity: MEDIUM\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27538](https://avd.aquasec.com/nvd/cve-2023-27538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28320",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-28320\nSeverity: MEDIUM\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28320](https://avd.aquasec.com/nvd/cve-2023-28320)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28321",
          "ruleIndex": 20,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-28321\nSeverity: MEDIUM\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28321](https://avd.aquasec.com/nvd/cve-2023-28321)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-46218\nSeverity: MEDIUM\nFixed Version: 8.5.0-r0\nLink: [CVE-2023-46218](https://avd.aquasec.com/nvd/cve-2023-46218)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-46219\nSeverity: MEDIUM\nFixed Version: 8.5.0-r0\nLink: [CVE-2023-46219](https://avd.aquasec.com/nvd/cve-2023-46219)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35252",
          "ruleIndex": 23,
          "level": "note",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-35252\nSeverity: LOW\nFixed Version: 7.83.1-r3\nLink: [CVE-2022-35252](https://avd.aquasec.com/nvd/cve-2022-35252)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28322",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-28322\nSeverity: LOW\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28322](https://avd.aquasec.com/nvd/cve-2023-28322)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38546",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-38546\nSeverity: LOW\nFixed Version: 8.4.0-r0\nLink: [CVE-2023-38546](https://avd.aquasec.com/nvd/cve-2023-38546)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: curl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40674",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.4.8-r0\nVulnerability CVE-2022-40674\nSeverity: HIGH\nFixed Version: 2.4.9-r0\nLink: [CVE-2022-40674](https://avd.aquasec.com/nvd/cve-2022-40674)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: expat@2.4.8-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43680",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.4.8-r0\nVulnerability CVE-2022-43680\nSeverity: HIGH\nFixed Version: 2.5.0-r0\nLink: [CVE-2022-43680](https://avd.aquasec.com/nvd/cve-2022-43680)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: expat@2.4.8-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52425",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.4.8-r0\nVulnerability CVE-2023-52425\nSeverity: HIGH\nFixed Version: 2.6.0-r0\nLink: [CVE-2023-52425](https://avd.aquasec.com/nvd/cve-2023-52425)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: expat@2.4.8-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28757",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.4.8-r0\nVulnerability CVE-2024-28757\nSeverity: HIGH\nFixed Version: 2.6.2-r0\nLink: [CVE-2024-28757](https://avd.aquasec.com/nvd/cve-2024-28757)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: expat@2.4.8-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52426",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.4.8-r0\nVulnerability CVE-2023-52426\nSeverity: MEDIUM\nFixed Version: 2.6.0-r0\nLink: [CVE-2023-52426](https://avd.aquasec.com/nvd/cve-2023-52426)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: expat@2.4.8-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42898",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "Package: krb5-libs\nInstalled Version: 1.19.3-r0\nVulnerability CVE-2022-42898\nSeverity: HIGH\nFixed Version: 1.19.4-r0\nLink: [CVE-2022-42898](https://avd.aquasec.com/nvd/cve-2022-42898)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: krb5-libs@1.19.3-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1304",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "Package: libcom_err\nInstalled Version: 1.46.5-r0\nVulnerability CVE-2022-1304\nSeverity: HIGH\nFixed Version: 1.46.6-r0\nLink: [CVE-2022-1304](https://avd.aquasec.com/nvd/cve-2022-1304)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcom_err@1.46.5-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4450",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-4450\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4450](https://avd.aquasec.com/nvd/cve-2022-4450)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0215",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0215\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0215](https://avd.aquasec.com/nvd/cve-2023-0215)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0286",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0286\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0464",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0464\nSeverity: HIGH\nFixed Version: 1.1.1t-r1\nLink: [CVE-2023-0464](https://avd.aquasec.com/nvd/cve-2023-0464)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2097",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-2097\nSeverity: MEDIUM\nFixed Version: 1.1.1q-r0\nLink: [CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4304",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-4304\nSeverity: MEDIUM\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4304](https://avd.aquasec.com/nvd/cve-2022-4304)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0465",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0465\nSeverity: MEDIUM\nFixed Version: 1.1.1t-r2\nLink: [CVE-2023-0465](https://avd.aquasec.com/nvd/cve-2023-0465)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2650",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-2650\nSeverity: MEDIUM\nFixed Version: 1.1.1u-r0\nLink: [CVE-2023-2650](https://avd.aquasec.com/nvd/cve-2023-2650)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3446",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-3446\nSeverity: MEDIUM\nFixed Version: 1.1.1u-r2\nLink: [CVE-2023-3446](https://avd.aquasec.com/nvd/cve-2023-3446)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3817",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-3817\nSeverity: MEDIUM\nFixed Version: 1.1.1v-r0\nLink: [CVE-2023-3817](https://avd.aquasec.com/nvd/cve-2023-3817)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-5678\nSeverity: MEDIUM\nFixed Version: 1.1.1w-r1\nLink: [CVE-2023-5678](https://avd.aquasec.com/nvd/cve-2023-5678)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcrypto1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32221",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-32221\nSeverity: CRITICAL\nFixed Version: 7.83.1-r4\nLink: [CVE-2022-32221](https://avd.aquasec.com/nvd/cve-2022-32221)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23914",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-23914\nSeverity: CRITICAL\nFixed Version: 7.83.1-r6\nLink: [CVE-2023-23914](https://avd.aquasec.com/nvd/cve-2023-23914)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38545",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-38545\nSeverity: CRITICAL\nFixed Version: 8.4.0-r0\nLink: [CVE-2023-38545](https://avd.aquasec.com/nvd/cve-2023-38545)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42915",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-42915\nSeverity: HIGH\nFixed Version: 7.83.1-r4\nLink: [CVE-2022-42915](https://avd.aquasec.com/nvd/cve-2022-42915)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42916",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-42916\nSeverity: HIGH\nFixed Version: 7.83.1-r4\nLink: [CVE-2022-42916](https://avd.aquasec.com/nvd/cve-2022-42916)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43551",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-43551\nSeverity: HIGH\nFixed Version: 7.83.1-r5\nLink: [CVE-2022-43551](https://avd.aquasec.com/nvd/cve-2022-43551)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27533",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27533\nSeverity: HIGH\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27533](https://avd.aquasec.com/nvd/cve-2023-27533)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27534",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27534\nSeverity: HIGH\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27534](https://avd.aquasec.com/nvd/cve-2023-27534)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28319",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-28319\nSeverity: HIGH\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28319](https://avd.aquasec.com/nvd/cve-2023-28319)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38039",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-38039\nSeverity: HIGH\nFixed Version: 8.3.0-r0\nLink: [CVE-2023-38039](https://avd.aquasec.com/nvd/cve-2023-38039)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43552",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-43552\nSeverity: MEDIUM\nFixed Version: 7.83.1-r5\nLink: [CVE-2022-43552](https://avd.aquasec.com/nvd/cve-2022-43552)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23915",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-23915\nSeverity: MEDIUM\nFixed Version: 7.83.1-r6\nLink: [CVE-2023-23915](https://avd.aquasec.com/nvd/cve-2023-23915)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23916",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-23916\nSeverity: MEDIUM\nFixed Version: 7.83.1-r6\nLink: [CVE-2023-23916](https://avd.aquasec.com/nvd/cve-2023-23916)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27535",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27535\nSeverity: MEDIUM\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27535](https://avd.aquasec.com/nvd/cve-2023-27535)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27536",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27536\nSeverity: MEDIUM\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27536](https://avd.aquasec.com/nvd/cve-2023-27536)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27537",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27537\nSeverity: MEDIUM\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27537](https://avd.aquasec.com/nvd/cve-2023-27537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27538",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-27538\nSeverity: MEDIUM\nFixed Version: 8.0.1-r0\nLink: [CVE-2023-27538](https://avd.aquasec.com/nvd/cve-2023-27538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28320",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-28320\nSeverity: MEDIUM\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28320](https://avd.aquasec.com/nvd/cve-2023-28320)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28321",
          "ruleIndex": 20,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-28321\nSeverity: MEDIUM\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28321](https://avd.aquasec.com/nvd/cve-2023-28321)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-46218\nSeverity: MEDIUM\nFixed Version: 8.5.0-r0\nLink: [CVE-2023-46218](https://avd.aquasec.com/nvd/cve-2023-46218)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-46219\nSeverity: MEDIUM\nFixed Version: 8.5.0-r0\nLink: [CVE-2023-46219](https://avd.aquasec.com/nvd/cve-2023-46219)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35252",
          "ruleIndex": 23,
          "level": "note",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2022-35252\nSeverity: LOW\nFixed Version: 7.83.1-r3\nLink: [CVE-2022-35252](https://avd.aquasec.com/nvd/cve-2022-35252)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28322",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-28322\nSeverity: LOW\nFixed Version: 8.1.0-r0\nLink: [CVE-2023-28322](https://avd.aquasec.com/nvd/cve-2023-28322)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38546",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.83.1-r2\nVulnerability CVE-2023-38546\nSeverity: LOW\nFixed Version: 8.4.0-r0\nLink: [CVE-2023-38546](https://avd.aquasec.com/nvd/cve-2023-38546)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libcurl@7.83.1-r2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4450",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-4450\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4450](https://avd.aquasec.com/nvd/cve-2022-4450)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0215",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0215\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0215](https://avd.aquasec.com/nvd/cve-2023-0215)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0286",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0286\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0464",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0464\nSeverity: HIGH\nFixed Version: 1.1.1t-r1\nLink: [CVE-2023-0464](https://avd.aquasec.com/nvd/cve-2023-0464)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2097",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-2097\nSeverity: MEDIUM\nFixed Version: 1.1.1q-r0\nLink: [CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4304",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-4304\nSeverity: MEDIUM\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4304](https://avd.aquasec.com/nvd/cve-2022-4304)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0465",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0465\nSeverity: MEDIUM\nFixed Version: 1.1.1t-r2\nLink: [CVE-2023-0465](https://avd.aquasec.com/nvd/cve-2023-0465)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2650",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-2650\nSeverity: MEDIUM\nFixed Version: 1.1.1u-r0\nLink: [CVE-2023-2650](https://avd.aquasec.com/nvd/cve-2023-2650)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3446",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-3446\nSeverity: MEDIUM\nFixed Version: 1.1.1u-r2\nLink: [CVE-2023-3446](https://avd.aquasec.com/nvd/cve-2023-3446)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3817",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-3817\nSeverity: MEDIUM\nFixed Version: 1.1.1v-r0\nLink: [CVE-2023-3817](https://avd.aquasec.com/nvd/cve-2023-3817)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-5678\nSeverity: MEDIUM\nFixed Version: 1.1.1w-r1\nLink: [CVE-2023-5678](https://avd.aquasec.com/nvd/cve-2023-5678)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libssl1.1@1.1.1o-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46828",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Package: libtirpc\nInstalled Version: 1.3.2-r0\nVulnerability CVE-2021-46828\nSeverity: HIGH\nFixed Version: 1.3.2-r1\nLink: [CVE-2021-46828](https://avd.aquasec.com/nvd/cve-2021-46828)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libtirpc@1.3.2-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46828",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Package: libtirpc-conf\nInstalled Version: 1.3.2-r0\nVulnerability CVE-2021-46828\nSeverity: HIGH\nFixed Version: 1.3.2-r1\nLink: [CVE-2021-46828](https://avd.aquasec.com/nvd/cve-2021-46828)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: libtirpc-conf@1.3.2-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.3_p20220521-r0\nVulnerability CVE-2023-29491\nSeverity: HIGH\nFixed Version: 6.3_p20220521-r1\nLink: [CVE-2023-29491](https://avd.aquasec.com/nvd/cve-2023-29491)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: ncurses-libs@6.3_p20220521-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "Package: ncurses-terminfo-base\nInstalled Version: 6.3_p20220521-r0\nVulnerability CVE-2023-29491\nSeverity: HIGH\nFixed Version: 6.3_p20220521-r1\nLink: [CVE-2023-29491](https://avd.aquasec.com/nvd/cve-2023-29491)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: ncurses-terminfo-base@6.3_p20220521-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35945",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "Package: nghttp2-libs\nInstalled Version: 1.47.0-r0\nVulnerability CVE-2023-35945\nSeverity: HIGH\nFixed Version: 1.47.0-r1\nLink: [CVE-2023-35945](https://avd.aquasec.com/nvd/cve-2023-35945)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: nghttp2-libs@1.47.0-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "Package: nghttp2-libs\nInstalled Version: 1.47.0-r0\nVulnerability CVE-2023-44487\nSeverity: HIGH\nFixed Version: 1.47.0-r2\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: nghttp2-libs@1.47.0-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7104",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "Package: sqlite-libs\nInstalled Version: 3.38.5-r0\nVulnerability CVE-2023-7104\nSeverity: HIGH\nFixed Version: 3.40.1-r1\nLink: [CVE-2023-7104](https://avd.aquasec.com/nvd/cve-2023-7104)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: sqlite-libs@3.38.5-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.35.0-r13\nVulnerability CVE-2022-30065\nSeverity: HIGH\nFixed Version: 1.35.0-r15\nLink: [CVE-2022-30065](https://avd.aquasec.com/nvd/cve-2022-30065)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: ssl_client@1.35.0-r13"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.35.0-r13\nVulnerability CVE-2023-42366\nSeverity: MEDIUM\nFixed Version: 1.35.0-r18\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: ssl_client@1.35.0-r13"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37434",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "Package: zlib\nInstalled Version: 1.2.12-r1\nVulnerability CVE-2022-37434\nSeverity: CRITICAL\nFixed Version: 1.2.12-r2\nLink: [CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dolevf/dvga",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "dolevf/dvga: zlib@1.2.12-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-30861",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "Package: Flask\nInstalled Version: 1.1.2\nVulnerability CVE-2023-30861\nSeverity: HIGH\nFixed Version: 2.3.2, 2.2.5\nLink: [CVE-2023-30861](https://avd.aquasec.com/nvd/cve-2023-30861)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Flask-1.1.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Flask-1.1.2.dist-info/METADATA: Flask@1.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-6221",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "Package: Flask-Cors\nInstalled Version: 3.0.10\nVulnerability CVE-2024-6221\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2024-6221](https://avd.aquasec.com/nvd/cve-2024-6221)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Flask_Cors-3.0.10.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Flask_Cors-3.0.10.dist-info/METADATA: Flask-Cors@3.0.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-1681",
          "ruleIndex": 52,
          "level": "warning",
          "message": {
            "text": "Package: Flask-Cors\nInstalled Version: 3.0.10\nVulnerability CVE-2024-1681\nSeverity: MEDIUM\nFixed Version: 4.0.1\nLink: [CVE-2024-1681](https://avd.aquasec.com/nvd/cve-2024-1681)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Flask_Cors-3.0.10.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Flask_Cors-3.0.10.dist-info/METADATA: Flask-Cors@3.0.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28493",
          "ruleIndex": 53,
          "level": "warning",
          "message": {
            "text": "Package: Jinja2\nInstalled Version: 2.11.2\nVulnerability CVE-2020-28493\nSeverity: MEDIUM\nFixed Version: 2.11.3\nLink: [CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Jinja2-2.11.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Jinja2-2.11.2.dist-info/METADATA: Jinja2@2.11.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22195",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "Package: Jinja2\nInstalled Version: 2.11.2\nVulnerability CVE-2024-22195\nSeverity: MEDIUM\nFixed Version: 3.1.3\nLink: [CVE-2024-22195](https://avd.aquasec.com/nvd/cve-2024-22195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Jinja2-2.11.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Jinja2-2.11.2.dist-info/METADATA: Jinja2@2.11.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34064",
          "ruleIndex": 55,
          "level": "warning",
          "message": {
            "text": "Package: Jinja2\nInstalled Version: 2.11.2\nVulnerability CVE-2024-34064\nSeverity: MEDIUM\nFixed Version: 3.1.4\nLink: [CVE-2024-34064](https://avd.aquasec.com/nvd/cve-2024-34064)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Jinja2-2.11.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Jinja2-2.11.2.dist-info/METADATA: Jinja2@2.11.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29217",
          "ruleIndex": 56,
          "level": "error",
          "message": {
            "text": "Package: PyJWT\nInstalled Version: 1.7.1\nVulnerability CVE-2022-29217\nSeverity: HIGH\nFixed Version: 2.4.0\nLink: [CVE-2022-29217](https://avd.aquasec.com/nvd/cve-2022-29217)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/PyJWT-1.7.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/PyJWT-1.7.1.dist-info/METADATA: PyJWT@1.7.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25577",
          "ruleIndex": 57,
          "level": "error",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2023-25577\nSeverity: HIGH\nFixed Version: 2.2.3\nLink: [CVE-2023-25577](https://avd.aquasec.com/nvd/cve-2023-25577)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Werkzeug-1.0.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Werkzeug-1.0.1.dist-info/METADATA: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34069",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2024-34069\nSeverity: HIGH\nFixed Version: 3.0.3\nLink: [CVE-2024-34069](https://avd.aquasec.com/nvd/cve-2024-34069)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Werkzeug-1.0.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Werkzeug-1.0.1.dist-info/METADATA: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46136",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2023-46136\nSeverity: MEDIUM\nFixed Version: 3.0.1, 2.3.8\nLink: [CVE-2023-46136](https://avd.aquasec.com/nvd/cve-2023-46136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Werkzeug-1.0.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Werkzeug-1.0.1.dist-info/METADATA: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23934",
          "ruleIndex": 60,
          "level": "note",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2023-23934\nSeverity: LOW\nFixed Version: 2.2.3\nLink: [CVE-2023-23934](https://avd.aquasec.com/nvd/cve-2023-23934)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/Werkzeug-1.0.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/Werkzeug-1.0.1.dist-info/METADATA: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-37920",
          "ruleIndex": 61,
          "level": "error",
          "message": {
            "text": "Package: certifi\nInstalled Version: 2020.12.5\nVulnerability CVE-2023-37920\nSeverity: HIGH\nFixed Version: 2023.7.22\nLink: [CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/certifi-2020.12.5.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/certifi-2020.12.5.dist-info/METADATA: certifi@2020.12.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23491",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Package: certifi\nInstalled Version: 2020.12.5\nVulnerability CVE-2022-23491\nSeverity: MEDIUM\nFixed Version: 2022.12.07\nLink: [CVE-2022-23491](https://avd.aquasec.com/nvd/cve-2022-23491)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/certifi-2020.12.5.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/certifi-2020.12.5.dist-info/METADATA: certifi@2020.12.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-41419",
          "ruleIndex": 63,
          "level": "error",
          "message": {
            "text": "Package: gevent\nInstalled Version: 21.12.0\nVulnerability CVE-2023-41419\nSeverity: CRITICAL\nFixed Version: 23.9.0\nLink: [CVE-2023-41419](https://avd.aquasec.com/nvd/cve-2023-41419)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/gevent-21.12.0.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/gevent-21.12.0.dist-info/METADATA: gevent@21.12.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3651",
          "ruleIndex": 64,
          "level": "warning",
          "message": {
            "text": "Package: idna\nInstalled Version: 2.10\nVulnerability CVE-2024-3651\nSeverity: MEDIUM\nFixed Version: 3.7\nLink: [CVE-2024-3651](https://avd.aquasec.com/nvd/cve-2024-3651)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/idna-2.10.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/idna-2.10.dist-info/METADATA: idna@2.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5752",
          "ruleIndex": 65,
          "level": "warning",
          "message": {
            "text": "Package: pip\nInstalled Version: 22.0.4\nVulnerability CVE-2023-5752\nSeverity: MEDIUM\nFixed Version: 23.3\nLink: [CVE-2023-5752](https://avd.aquasec.com/nvd/cve-2023-5752)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "opt/dvga/venv/lib/python3.7/site-packages/pip-22.0.4.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "opt/dvga/venv/lib/python3.7/site-packages/pip-22.0.4.dist-info/METADATA: pip@22.0.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5752",
          "ruleIndex": 65,
          "level": "warning",
          "message": {
            "text": "Package: pip\nInstalled Version: 22.0.4\nVulnerability CVE-2023-5752\nSeverity: MEDIUM\nFixed Version: 23.3\nLink: [CVE-2023-5752](https://avd.aquasec.com/nvd/cve-2023-5752)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/lib/python3.7/site-packages/pip-22.0.4.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/lib/python3.7/site-packages/pip-22.0.4.dist-info/METADATA: pip@22.0.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5752",
          "ruleIndex": 65,
          "level": "warning",
          "message": {
            "text": "Package: pip\nInstalled Version: 22.1.2\nVulnerability CVE-2023-5752\nSeverity: MEDIUM\nFixed Version: 23.3\nLink: [CVE-2023-5752](https://avd.aquasec.com/nvd/cve-2023-5752)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/pip-22.1.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/pip-22.1.2.dist-info/METADATA: pip@22.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42969",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "Package: py\nInstalled Version: 1.11.0\nVulnerability CVE-2022-42969\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2022-42969](https://avd.aquasec.com/nvd/cve-2022-42969)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/py-1.11.0.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/py-1.11.0.dist-info/METADATA: py@1.11.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32681",
          "ruleIndex": 67,
          "level": "warning",
          "message": {
            "text": "Package: requests\nInstalled Version: 2.25.1\nVulnerability CVE-2023-32681\nSeverity: MEDIUM\nFixed Version: 2.31.0\nLink: [CVE-2023-32681](https://avd.aquasec.com/nvd/cve-2023-32681)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/requests-2.25.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/requests-2.25.1.dist-info/METADATA: requests@2.25.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-35195",
          "ruleIndex": 68,
          "level": "warning",
          "message": {
            "text": "Package: requests\nInstalled Version: 2.25.1\nVulnerability CVE-2024-35195\nSeverity: MEDIUM\nFixed Version: 2.32.0\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/requests-2.25.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/requests-2.25.1.dist-info/METADATA: requests@2.25.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40897",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "Package: setuptools\nInstalled Version: 47.1.0\nVulnerability CVE-2022-40897\nSeverity: HIGH\nFixed Version: 65.5.1\nLink: [CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "opt/dvga/venv/lib/python3.7/site-packages/setuptools-47.1.0.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "opt/dvga/venv/lib/python3.7/site-packages/setuptools-47.1.0.dist-info/METADATA: setuptools@47.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-6345",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "Package: setuptools\nInstalled Version: 47.1.0\nVulnerability CVE-2024-6345\nSeverity: HIGH\nFixed Version: 70.0.0\nLink: [CVE-2024-6345](https://avd.aquasec.com/nvd/cve-2024-6345)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "opt/dvga/venv/lib/python3.7/site-packages/setuptools-47.1.0.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "opt/dvga/venv/lib/python3.7/site-packages/setuptools-47.1.0.dist-info/METADATA: setuptools@47.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40897",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "Package: setuptools\nInstalled Version: 57.5.0\nVulnerability CVE-2022-40897\nSeverity: HIGH\nFixed Version: 65.5.1\nLink: [CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/lib/python3.7/site-packages/setuptools-57.5.0.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/lib/python3.7/site-packages/setuptools-57.5.0.dist-info/METADATA: setuptools@57.5.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-6345",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "Package: setuptools\nInstalled Version: 57.5.0\nVulnerability CVE-2024-6345\nSeverity: HIGH\nFixed Version: 70.0.0\nLink: [CVE-2024-6345](https://avd.aquasec.com/nvd/cve-2024-6345)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/lib/python3.7/site-packages/setuptools-57.5.0.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/lib/python3.7/site-packages/setuptools-57.5.0.dist-info/METADATA: setuptools@57.5.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33503",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2021-33503\nSeverity: HIGH\nFixed Version: 1.26.5\nLink: [CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28363",
          "ruleIndex": 72,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2021-28363\nSeverity: MEDIUM\nFixed Version: 1.26.4\nLink: [CVE-2021-28363](https://avd.aquasec.com/nvd/cve-2021-28363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-43804",
          "ruleIndex": 73,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2023-43804\nSeverity: MEDIUM\nFixed Version: 2.0.6, 1.26.17\nLink: [CVE-2023-43804](https://avd.aquasec.com/nvd/cve-2023-43804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45803",
          "ruleIndex": 74,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2023-45803\nSeverity: MEDIUM\nFixed Version: 2.0.7, 1.26.18\nLink: [CVE-2023-45803](https://avd.aquasec.com/nvd/cve-2023-45803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37891",
          "ruleIndex": 75,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2024-37891\nSeverity: MEDIUM\nFixed Version: 1.26.19, 2.2.2\nLink: [CVE-2024-37891](https://avd.aquasec.com/nvd/cve-2024-37891)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/urllib3-1.26.3.dist-info/METADATA: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40898",
          "ruleIndex": 76,
          "level": "error",
          "message": {
            "text": "Package: wheel\nInstalled Version: 0.37.1\nVulnerability CVE-2022-40898\nSeverity: HIGH\nFixed Version: 0.38.1\nLink: [CVE-2022-40898](https://avd.aquasec.com/nvd/cve-2022-40898)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/lib/python3.7/site-packages/wheel-0.37.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/lib/python3.7/site-packages/wheel-0.37.1.dist-info/METADATA: wheel@0.37.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-5569",
          "ruleIndex": 77,
          "level": "warning",
          "message": {
            "text": "Package: zipp\nInstalled Version: 3.8.0\nVulnerability CVE-2024-5569\nSeverity: MEDIUM\nFixed Version: 3.19.1\nLink: [CVE-2024-5569](https://avd.aquasec.com/nvd/cve-2024-5569)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "home/dvga/.local/lib/python3.7/site-packages/zipp-3.8.0.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "home/dvga/.local/lib/python3.7/site-packages/zipp-3.8.0.dist-info/METADATA: zipp@3.8.0"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      },
      "properties": {
        "imageID": "sha256:9640df3c67a03dba7a2c6423ae3d9c1dd82f95e2be511a078b87c73e9ec4132e",
        "imageName": "dolevf/dvga",
        "repoDigests": [
          "dolevf/dvga@sha256:d8e9590c00c016bf789cb5ad23e5d80ab8890edc0196cf5a330f973a6964323c"
        ],
        "repoTags": [
          "dolevf/dvga:latest"
        ]
      }
    }
  ]
}